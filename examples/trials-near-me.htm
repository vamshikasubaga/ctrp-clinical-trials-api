<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Trials Near Me example</title>
    <link href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/themes/smoothness/jquery-ui.min.css" rel="stylesheet">
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/jquery-ui.min.js"></script>
    <script>

var trialLinkRoot = 'http://www.cancer.gov/about-cancer/treatment/clinical-trials/search/v?id=';

$(document).ready(function () {
    $('#btnLookup').on('click', doLookup);
    $('#formLookup').on('submit', function(evt) {doLookup();evt.preventDefault();});
    $('#diseaseName').autocomplete({
        delay : 500,
        source : doAutocompleteLookup,
		select : autocompleteSelect,
		focus : function(evt,  ui) {
			// Display disease name instead of ID.
			$('#diseaseName').val(ui.item.label);
			evt.preventDefault();
		},
    });
    $("#btnClear").on('click', function(evt){
		$('#output').html("");
		$('#diseaseID').val('');
		$('#diseaseName').prop('disabled', false);
		$('#btnLookup').prop('disabled', true);
	});
});
    
function doLookup(){

	// Success callback for the geolocation lookup.
	function success(position) {
	
		var latitude  = position.coords.latitude;
		var longitude = position.coords.longitude;
		var distance = $('#radius').val() + "mi"; // May also append 'km' for kilometers.
		var diseaseID = $('#diseaseID').val();

		// Search for trials according to disease ID, and distance from a set
		// of geo coordinates.
		var data = {
				"diseases.nci_thesaurus_concept_id" : diseaseID,
				"sites.org_coordinates_lat" : latitude,
				"sites.org_coordinates_lon" : longitude,
				"sites.org_coordinates_dist" : distance,
				"size" : 20
			}; 

		// Perform a search for trial details.
		$.get('https://clinicaltrialsapi.cancer.gov/v1/clinical-trials', data)
			.done(function success( results ) {
				var output;
				if(results.total > 0) {
					var count = (results.total < data["size"] ? results.total : data["size"])
					output = '<p>Showing results 1 to ' + count + ' of ' + results.total + '.</p>';
					output += '<ul>';
					for(var i = 0; i < results.trials.length; i++) {
						var trial = results.trials[i];                            
						output += ( '<li><a href="' + trialLinkRoot + trial.nci_id
							+ '">' + trial.brief_title + '</a><br>' + trial.brief_summary + '</li>' );
					}
					output += '</ul>';
				} else {
					output = '<p>No results found.</p>';
				}
				$('#output').html(output);
			})
			.fail(function failure (){$('#output').html('An error has occured.');});
	};
	
	// Error callback for location lookup.
	function error() {
		$('#error').html('Unable to obtain your current loction.');
	};

	// Set up the browser geolocation API with success and error callbacks.
	// In Chrome, geolcation is only available on pages served over HTTPS.
	if($('#diseaseID').val() !== '') {
		$('#error').html('');
		navigator.geolocation.getCurrentPosition(success, error);
	}
}

// Autocomplete for disease names.
function doAutocompleteLookup(req, rsp) {

    if(req.term.length > 2) {

        // Search for disease names, return first 10 results
        var data = {
            'term' : req.term,
            'term_type' : '_diseases',
            'size' : 10
        };

        // Perform the search for disease types.
        $.get('https://clinicaltrialsapi.cancer.gov/v1/terms', data)
            .done(function success(results){
                var data = [];
                var terms = results.terms;
                for(var i = 0; i < terms.length; i++ ) {
                    data[i] = {};
					data[i].label = terms[i].term;
					data[i].value = terms[i].codes[0];
				}

                rsp(data);
            })
            .fail(function failure (){$('#output').html('An error has occured.');});
    }
}

// Autocomplete select handler.
function autocompleteSelect(evt, ui ) {
	$('#diseaseName').val(ui.item.label);
	$('#diseaseID').val(ui.item.value);
	$('#diseaseName').prop('disabled', true);
	$('#btnLookup').prop('disabled', false);
	evt.preventDefault();
}

    </script>
</head>
<body>

    <form id="formLookup">

        <p><label for="diseaseName">Start typing to select a disease name.</label><br>
        <input id="diseaseName" type="text" maxlength="50" value="">
		<input id="diseaseID" type="hidden" value="" /></p>

		<p><label for="radius">Distance from my location.</label>
		<select id="radius">
			<option value="100">100 miles</option>
			<option value="250">250 miles</option>
			<option value="500">500 miles</option>
		</select>
		</p>
        <p><input type="button" id="btnLookup" disabled value="Do Search"/> <input type="reset" id="btnClear" value="Clear"/></p>

		<div id="error"></div>
        <div id="output"></div>

    </form>

</body>
</html>